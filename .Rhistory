filter(hour(TRANS.PROGRAMMATO) == 8) %>%
length(unique(.$VEICOLO))
d <- read_csv('datasets/tpl/lines_events/401_2019_05.csv') %>%
filter(hour(TRANS.PROGRAMMATO) == 8) %>%
select(VEICOLO)
d <- read_csv('datasets/tpl/lines_events/401_2019_05.csv') %>%
filter(hour(TRANS.PROGRAMMATO) == 8) %>%
select(VEICOLO) %>%
unique()
d <- read_csv('datasets/tpl/lines_events/401_2019_05.csv') %>%
filter(hour(TRANS.PROGRAMMATO) == 8) %>%
select(VEICOLO) %>%
unique() %>%
length()
d <- read_csv('datasets/tpl/lines_events/401_2019_05.csv') %>%
filter(hour(TRANS.PROGRAMMATO) == 8) %>%
select(VEICOLO) %>%
unique() %>%
nrow()
library(fs)
files <- fs::dir_ls('datasets/tpl/lines_events/')
d <- lapply(files, function(x) read_csv(x))
View(d)
d <- bind_rows(d)
d <- lapply(files, function(x) read_csv(x) %>%
select(VEICOLO,DATA,TRANS.PROGRAMMATO))
d <- lapply(files, function(x) print(x); read_csv(x) %>%
select(VEICOLO,DATA,TRANS.PROGRAMMATO))
d <- lapply(files, function(x){
print(x)
read_csv(x) %>%
select(VEICOLO,DATA,TRANS.PROGRAMMATO))
}
rm(d)
d <- lapply(files, function(x){
print(x)
read_csv(x) %>%
select(VEICOLO,DATA,TRANS.PROGRAMMATO)})
d <- lapply(files, function(x){
print(x)
read_csv(x)[,c(1,7,9)]})
d <- bind_rows(d)
View(d)
db <- d
d <- d %>%
mutate(DATA = dmy(DATA))
d <- d %>%
mutate(DATA = dmy(DATA)) %>%
mutate(hour = hour(TRANS.PROGRAMMATO))
d[!is.na(d$X1),]
d <- db
d[!is.na(d$X1),]
d[!is.na(d$X1),1] <- d[!is.na(d$X1),4]
d <- db
d[!is.na(d$X1),1] <- d[!is.na(d$X1),4]
d <- d %>%
select(-X1)
d
d[!is.na(d$X1),]
d[is.na(d[1]),]
d <- lapply(files, function(x) read_csv(x)[,c(1,7,9)]) %>%
bind_rows()
d[!is.na(d$X1),1] <- d[!is.na(d$X1),4]
d[is.na(d[1]),]
db <- d
mutate(DATA = dmy(DATA)) %>%
mutate(hour = hour(TRANS.PROGRAMMATO))
d <- d %>%
select(-X1)
d <- db
d <- d %>%
select(-X1)
d <- db
d <- d %>%
select(-X1) %>%
mutate(date = dmy(DATA)) %>%
mutate(hour = hour(TRANS.PROGRAMMATO))
d <- db
d <- d %>%
select(-X1)
d <- db
d <- d %>%
select(-X1) %>%
mutate(date = dmy(DATA))
d <- db
d <- d %>%
mutate(date = dmy(DATA)) %>%
mutate(hour = hour(TRANS.PROGRAMMATO)) %>%
select(-X1, -DATA, -TRANS.PROGRAMMATO)
x <- data.frame(
date = list()
)
x <- data.frame(
date = list(),
hour = list(),
count = list()
)
for (k in unique(d$date)){
for(h in unique(d$hour)){
y <- list(
date = k,
hour = h,
count = length(unique(d$VEICOLO[d$date == k & d$hour == h]))
)
}
}
View(y)
detach(d)
x <- data.frame(
date = list(),
hour = list(),
count = list()
)
for (k in unique(d$date)){
for(h in unique(d$hour)){
y <- list(
date = k,
hour = h,
count = length(unique(d$VEICOLO[d$date == k & d$hour == h]))
)
x <- bind_rows(x, y)
}
}
d <- db
d <- d %>%
mutate(date = dmy(DATA)) %>%
mutate(hour = hour(TRANS.PROGRAMMATO)) %>%
select(-X1, -DATA, -TRANS.PROGRAMMATO) %>%
mutate(dh = paste(date, hour, sep = '_'))
rm(x,y,k,h)
db <- d
dbb <- tapply(d$VEICOLO, as.factor(d$dh), function(x) length(unique(x)))
View(dbb)
d <- lapply(files, function(x) read_csv(x)[,c(1,7,9)]) %>%
bind_rows()
d[!is.na(d$X1),1] <- d[!is.na(d$X1),4]
d <- d %>%
mutate(date = dmy(DATA)) %>%
mutate(hour = hour(TRANS.PROGRAMMATO)) %>%
select(-X1, -DATA, -TRANS.PROGRAMMATO) %>%
nrow(distinct(VEICOLO, date, hour))
d <- d %>%
mutate(date = dmy(DATA)) %>%
mutate(hour = hour(TRANS.PROGRAMMATO)) %>%
select(-X1, -DATA, -TRANS.PROGRAMMATO)
d <- distinct(d, VEICOLO, date, hour)
d <- lapply(files, function(x) read_csv(x)[,c(1,7,9)]) %>%
bind_rows()
d[!is.na(d$X1),1] <- d[!is.na(d$X1),4]
d <- d %>%
mutate(date = dmy(DATA)) %>%
mutate(hour = hour(TRANS.PROGRAMMATO)) %>%
select(-X1, -DATA, -TRANS.PROGRAMMATO) %>%
mutate(dh = paste(date, hour, sep = '_'))
cnt <- tapply(d$VEICOLO, as.factor(d$dh), function(x) length(unique(x))) %>%
rownames_to_column('dh') %>%
rename(count = V1)
cnt <- tapply(d$VEICOLO, as.factor(d$dh), function(x) length(unique(x))) %>%
tibble %>%
rownames_to_column('dh') %>%
rename(count = V1)
cnt <- tapply(d$VEICOLO, as.factor(d$dh), function(x) length(unique(x))) %>%
tibble %>%
rownames_to_column('dh')
cnt <- tapply(d$VEICOLO, as.factor(d$dh), function(x) length(unique(x))) %>%
tibble %>%
rownames_to_column('dh') %>%
rename(count = 'V1')
cnt <- tapply(d$VEICOLO, as.factor(d$dh), function(x) length(unique(x))) %>%
tibble %>%
rownames_to_column('dh') %>% colnames()
cnt <- tapply(d$VEICOLO, as.factor(d$dh), function(x) length(unique(x))) %>%
tibble(count = .) %>%
rownames_to_column('dh')
View(cnt)
cnt <- tapply(d$VEICOLO, as.factor(d$dh), function(x) length(unique(x))) %>%
tibble(
dh = names(.),
count = .)
d <- left_join(d, cnt, by = 'dh')
View(d)
d <- tapply(d$VEICOLO, as.factor(d$dh), function(x) length(unique(x))) %>%
tibble(
dh = names(.),
count = .)
dh = names(.),
count = .) %>%
mutate(dh = ymd_h(dh))
d <- lapply(files, function(x) read_csv(x)[,c(1,7,9)]) %>%
bind_rows()
d[!is.na(d$X1),1] <- d[!is.na(d$X1),4]
d <- d %>%
mutate(date = dmy(DATA)) %>%
mutate(hour = hour(TRANS.PROGRAMMATO)) %>%
select(-X1, -DATA, -TRANS.PROGRAMMATO) %>%
mutate(dh = paste(date, hour, sep = '_'))
d <- tapply(d$VEICOLO, as.factor(d$dh), function(x) length(unique(x))) %>%
tibble(
dh = names(.),
count = .) %>%
mutate(dh = ymd_h(dh))
library(ggplot2)
g <- d %>%
transmute(hour = hour(dh), count = count)
View(g)
g <- d %>%
transmute(hour = hour(dh), count = count) %>%
group_by(hour) %>%
summarise(avg = mean(count))
g <- d %>%
transmute(hour = hour(dh), count = count) %>%
group_by(hour) %>%
summarise(avg = mean(count)) %>%
ggplot(aes(hour,count)) + geom_col()
g <- d %>%
transmute(hour = hour(dh), count = count) %>%
group_by(hour) %>%
summarise(avg = mean(count))
ggplot(g, aes(hour,count)) + geom_col()
ggplot(g, aes(hour,count)) + geom_point()
ggplot(g, aes(hour,avg)) + geom_point()
ggplot(g, aes(hour,avg)) + geom_col()
write_csv(d, 'datasets/tpl_density.csv')
library(readr)
library(tibble)
library(dplyr)
library(lubridate)
library(stringr)
library(stargazer)
d <- read_csv('datasets/bikes.csv') %>%
# select(matches('date'), matches('hour')) %>%
mutate(time = paste(.$date, .$hour, sep = '_'))
s <- read_csv('datasets/swisscom_csv/tripcount_hourly_withinarea.csv') %>%
mutate(date = ymd_hms(.$Date)) %>%
transmute(time = paste(date(.$date), hour(.$date), sep = '_'),
commutes = `Reason: Commute`) %>%
filter(commutes != '<20') %>%
mutate(commutes = as.numeric(commutes))
df <- table(d$time) %>%
tibble(time = names(.), rides = .)
df <- inner_join(df, s, by = 'time')
source('~/Downloads/usi-hackathon-19/src/r/regrssions.R')
source('~/Downloads/usi-hackathon-19/src/r/regrssions.R')
rm(d,dfd,dff,dfp,reg2,reg3,reg4,s)
View(df)
# Regressions with tpl
tpl <- read_csv('datasets/tpl_density.csv')
View(tpl)
View(df)
View(df)
View(df)
df <- df %>%
mutate(time = ymd_h(time))
View(tpl)
# giovanni.kraushaar@usi.ch
library(readr)
library(tibble)
library(dplyr)
library(lubridate)
library(stringr)
library(stargazer)
# Regression 1
d <- read_csv('datasets/bikes.csv') %>%
# select(matches('date'), matches('hour')) %>%
mutate(time = paste(.$date, .$hour, sep = '_'))
s <- read_csv('datasets/swisscom_csv/tripcount_hourly_withinarea.csv') %>%
mutate(date = ymd_hms(.$Date)) %>%
transmute(time = paste(date(.$date), hour(.$date), sep = '_'),
commutes = `Reason: Commute`) %>%
filter(commutes != '<20') %>%
mutate(commutes = as.numeric(commutes))
df <- table(d$time) %>%
tibble(time = names(.), rides = .)
df <- inner_join(df, s, by = 'time')
lm(rides ~ commutes, df) %>% summary()
# Regression 2 - Pick hours
dfp <- df %>%
filter(str_detect(.$time, '(?<=_)[78]|17|18|12|13$'))
lm(rides ~ commutes, dfp) %>% summary()
df %>%  ## non pick hours
filter(!str_detect(.$time, '(?<=_)[78]|17|18|12|13$')) %>%
lm(rides ~ commutes, .) %>%
summary()
# Regression 3 - drunk hours (also more busses, substitution effect)
dfd <- df %>%
filter(str_detect(.$time, '(?<=_)(2[1-3])$|(?<=_)[0-2]$'))
lm(rides ~ commutes, dfd) %>% summary()
df %>%
filter(str_detect(.$time, '(?<=_)([0-3]|23)$')) %>%
lm(rides ~ commutes, .) %>%
summary()
# Regression 4 - control dummies
dff <- df
df <- dff
split_day <- function(x){
if (length(x) > 1) return(sapply(x, split_day))
out <- if (x > 20 | x == 5 | x == 0) 'E' else if (x < 5 & x > 0) 'N' else 'D'
return(out)
}
wday_dummy_gen <- function(x){
if (length(x) > 1) return(sapply(x, wday_dummy_gen))
out <- if (x %in% c('Sat','Sun')) TRUE else FALSE
return(out)
}
df <- df %>%
add_column(hour = as.numeric(str_extract(.$time, '(?<=_)\\d+$'))) %>%
add_column(day_time = split_day(.$hour)) %>%
add_column(weekend = .$time %>%
str_extract('^.+(?=_)') %>%
ymd() %>%
wday(label = TRUE) %>%
wday_dummy_gen())
## Factor Encoding
#  D - day (6-20)
#  E - evening and early morning (21-24 + 5) -> low density
#  N - night (1-4)
dummyfy <- function(x){
x <- as.factor(x)
d <- lapply(levels(x), function(y) if_else(x == y, TRUE, FALSE)) %>%
bind_cols()
colnames(d) <- levels(x)
return(d)
}
df <- df %>%
bind_cols(dummyfy(df$day_time))
lm(rides ~ commutes + D + E + weekend, df) %>%
summary()
lm(rides ~ commutes + low_transport + weekend,
df %>% mutate(low_transport = D+E)) %>%
summary()
# Regrssions on paper
# (1)
lm(rides ~ commutes, filter(df, !weekend)) %>%
stargazer(out = 'reg1.tex')
reg2 <- lm(rides ~ commutes, filter(df, !weekend, D))
reg3 <- lm(rides ~ commutes, filter(df, !weekend, E))
reg4 <- lm(rides ~ commutes, filter(df, !weekend, N))
stargazer(reg2,reg3,reg4, out = 'multireg.tex')
rm(d,dfd,dff,dfp,reg2,reg3,reg4,s)
d <- df %>%
mutate(time = ymd_h(time)) %>%
left_join(tpl, by = c('time' = 'dh'))
View(d)
replace_na(buses = 0)
library(tidyr)
replace_na(buses = 0)
d <- df %>%
mutate(time = ymd_h(time)) %>%
left_join(tpl, by = c('time' = 'dh')) %>%
rename(buses = count) %>%
replace_na(buses = 0)
d <- df %>%
mutate(time = ymd_h(time)) %>%
left_join(tpl, by = c('time' = 'dh')) %>%
rename(buses = count) %>%
replace_na(list(buses = 0))
reg_tpl <- lm(rides ~ commutes + buses, filter(df, !weekend))
reg_tpl <- lm(rides ~ commutes + buses, filter(d, !weekend))
summary(reg_tpl)
lm(rides ~ commutes + buses, filter(d, !weekend, D)) %>% summary()
lm(rides ~ commutes + buses, filter(d, !weekend, E)) %>% summary()
lm(rides ~ commutes + buses, filter(d, !weekend, N)) %>% summary()
stargazer(reg_tpl, reg_tpl2, reg_tpl3, out = 'reg_tpl.tex')
reg_tpl2 <- lm(rides ~ commutes + buses, filter(d, !weekend, D))
reg_tpl3 <- lm(rides ~ commutes + buses, filter(d, !weekend, E))
stargazer(reg_tpl, reg_tpl2, reg_tpl3, out = 'reg_tpl.tex')
gather_bike <- function(d, start, end){
d <- d %>%
filter(date >= ymd(start), date <= ymd(end))
stations <- read_csv('datasets/publibike/stations.csv') %>%
select('name', 'longitude', 'latitude')
# FROM
t <- table(d$hour,d$from)
hour <- attr(t,'dimnames')[[1]]
from <- attr(t,'dimnames')[[2]]
dfrom <- lapply(from, function(x) tibble(
from = rep(x,length(hour)),
hour = hour)) %>%
bind_rows()
t <- as.numeric(t) %>% tibble()
colnames(t) <- 'from_count'
dfrom <- bind_cols(dfrom, t)
rm(hour,from,t)
x <- dfrom %>% group_by(hour) %>% summarise(tot = sum(from_count))
dfrom <- inner_join(dfrom, x, by = 'hour') %>%
mutate(from_freq_rel = from_count / tot)
rm(x)
avg_dist <- tapply(d$distance, list(d$hour,d$from), mean) %>%
as.data.frame() %>%
rownames_to_column('hour') %>%
gather(-matches('hour'), key = 'from', value = 'from_avg_dist')
dfrom <- inner_join(dfrom, avg_dist, by = c('hour','from')) %>%
select(-'tot')
# TO
t <- table(d$hour,d$to)
hour <- attr(t,'dimnames')[[1]]
to <- attr(t,'dimnames')[[2]]
dto <- lapply(to, function(x) tibble(
to = rep(x,length(hour)),
hour = hour)) %>%
bind_rows()
t <- as.numeric(t) %>% tibble()
colnames(t) <- 'to_count'
dto <- bind_cols(dto, t)
rm(hour,to,t)
x <- dto %>% group_by(hour) %>% summarise(tot = sum(to_count))
dto <- inner_join(dto, x, by = 'hour') %>%
mutate(to_freq_rel = to_count / tot)
rm(x)
avg_dist <- tapply(d$distance, list(d$hour,d$to), mean) %>%
as.data.frame() %>%
rownames_to_column('hour') %>%
gather(-matches('hour'), key = 'to', value = 'to_avg_dist')
dto <- inner_join(dto, avg_dist, by = c('hour','to')) %>%
select(-'tot')
out <- inner_join(dfrom,dto, by = c('from' = 'to', 'hour')) %>%
left_join(stations, by = c('from' = 'name')) %>%
rename(station = from)
return(out)
}
d <- read.csv('datasets/bikes.csv') %>%
drop_na(to) %>%
mutate(from = as.factor(to), to = as.factor(to), hour = as.factor(hour)) %>%
mutate(date = ymd(date))
View(d)
gather_bike <- function(d, start, end){
d <- d %>%
filter(date >= ymd(start), date <= ymd(end))
stations <- read_csv('datasets/publibike/stations.csv') %>%
select('name', 'longitude', 'latitude')
# FROM
t <- table(d$hour,d$from)
hour <- attr(t,'dimnames')[[1]]
from <- attr(t,'dimnames')[[2]]
dfrom <- lapply(from, function(x) tibble(
from = rep(x,length(hour)),
hour = hour)) %>%
bind_rows()
t <- as.numeric(t) %>% tibble()
colnames(t) <- 'from_count'
dfrom <- bind_cols(dfrom, t)
rm(hour,from,t)
x <- dfrom %>% group_by(hour) %>% summarise(tot = sum(from_count))
dfrom <- inner_join(dfrom, x, by = 'hour') %>%
mutate(from_freq_rel = from_count / tot)
rm(x)
avg_dist <- tapply(d$distance, list(d$hour,d$from), mean) %>%
as.data.frame() %>%
rownames_to_column('hour') %>%
gather(-matches('hour'), key = 'from', value = 'from_avg_dist')
dfrom <- inner_join(dfrom, avg_dist, by = c('hour','from')) %>%
select(-'tot')
# TO
t <- table(d$hour,d$to)
hour <- attr(t,'dimnames')[[1]]
to <- attr(t,'dimnames')[[2]]
dto <- lapply(to, function(x) tibble(
to = rep(x,length(hour)),
hour = hour)) %>%
bind_rows()
t <- as.numeric(t) %>% tibble()
colnames(t) <- 'to_count'
dto <- bind_cols(dto, t)
rm(hour,to,t)
x <- dto %>% group_by(hour) %>% summarise(tot = sum(to_count))
dto <- inner_join(dto, x, by = 'hour') %>%
mutate(to_freq_rel = to_count / tot)
rm(x)
avg_dist <- tapply(d$distance, list(d$hour,d$to), mean) %>%
as.data.frame() %>%
rownames_to_column('hour') %>%
gather(-matches('hour'), key = 'to', value = 'to_avg_dist')
dto <- inner_join(dto, avg_dist, by = c('hour','to')) %>%
select(-'tot')
out <- inner_join(dfrom,dto, by = c('from' = 'to', 'hour')) %>%
left_join(stations, by = c('from' = 'name')) %>%
rename(station = from)
return(out)
}
df <- gather_bike(d,'2019-07-20','2019-08-19')
View(df)
df <- filter(d, day == 'Sat', day == 'Sun')
df <- filter(d, day == 'Sat' | day == 'Sun')
dsa <- gather_bike(d,'2019-07-20','2019-08-19') %>%
add_column( DOW = 'A', period = 'S')
dsw <- d %>%
filter(day == 'Sat' | day == 'Sun') %>%
gather_bike('2019-07-20','2019-08-19') %>%
add_column( DOW = 'W', period = 'S')
View(dsw)
dsd <- d %>%
filter(day != 'Sat' | day != 'Sun') %>%
gather_bike('2019-07-20','2019-08-19') %>%
add_column( DOW = 'D', period = 'S')
rm(df)
dfa <- gather_bike(d,'2019-09-16','2019-10-15') %>%
add_column( DOW = 'A', period = 'F')
dfw <- d %>%
filter(day == 'Sat' | day == 'Sun') %>%
gather_bike('2019-09-16','2019-10-15') %>%
add_column( DOW = 'W', period = 'F')
dfd <- d %>%
filter(day != 'Sat' | day != 'Sun') %>%
gather_bike('2019-09-16','2019-10-15') %>%
add_column( DOW = 'D', period = 'F')
df <- bind_rows(dsa, dsw, dsd, dfa, dfw, dfd)
df <- bind_rows(dsa, dsw, dsd, dfa, dfw, dfd) %>%
drop_na(from_avg_dist, to_avg_dist)
write_csv(
df,
path = 'datasets/gather_bike.csv'
)
