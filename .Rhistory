as.data.frame() %>%
rownames_to_column('hour') %>%
gather(-matches('hour'), key = 'station',
value = prefix + '_avg')
avg_dist <- tapply(distance, list(hour,station), mean) %>%
as.data.frame() %>%
rownames_to_column('hour') %>%
gather(-matches('hour'), key = 'station',
value = value)
avg_dist[paste(prefix, 'avg_dist', sep = '_')] <- avg_dist$value
t <- table(hour, station)
h <- attr(t,'dimnames')[[1]]  # hour
s <- attr(t,'dimnames')[[2]]  # station
df <- lapply(s, function(x) tibble(
s = rep(x,length(h)),
hour = h)) %>%
bind_rows()
t <- as.numeric(t) %>% tibble()
count_name <- paste(prefix, 'count', sep = '_')
colnames(t) <- count_name
df <- bind_cols(df, t)
rm(h,s,t)
t <- table(hour, station)
h <- attr(t,'dimnames')[[1]]  # hour
s <- attr(t,'dimnames')[[2]]  # station
df <- lapply(s, function(x) tibble(
s = rep(x,length(h)),
hour = h)) %>%
bind_rows()
t <- as.numeric(t) %>% tibble()
count_name <- paste(prefix, 'count', sep = '_')
colnames(t) <- count_name
df <- bind_cols(df, t) %>%
rename(station = s)
rm(h,s,t)
# PROBLEM HERE
hour_sum <- function(count, hour_vec, h){
idx <- hour_vec == h
s <- sum(count[idx])
return(s)
}
x <- lapply(unique(df$hour),
function(k){
l <- list(hour = k,
tot = hour_sum(df[[count_name]], df$hour, k))
return(l)
}) %>%
bind_rows()
df <- left_join(df, x, by = 'hour')
rm(x)
df[paste(prefix,'freq_rel',sep = '_')] <- df[[count_name]] / df$tot
avg_dist <- tapply(distance, list(hour,station), mean) %>%
as.data.frame() %>%
rownames_to_column('hour') %>%
gather(-matches('hour'), key = 'station',
value = value)
avg_dist[paste(prefix, 'avg_dist', sep = '_')] <- avg_dist$value
df <- inner_join(df, avg_dist, by = c('hour','station')) %>%
select(-'tot')
t <- table(hour, station)
h <- attr(t,'dimnames')[[1]]  # hour
s <- attr(t,'dimnames')[[2]]  # station
df <- lapply(s, function(x) tibble(
s = rep(x,length(h)),
hour = h)) %>%
bind_rows()
t <- as.numeric(t) %>% tibble()
count_name <- paste(prefix, 'count', sep = '_')
colnames(t) <- count_name
df <- bind_cols(df, t) %>%
rename(station = s)
rm(h,s,t)
# PROBLEM HERE
hour_sum <- function(count, hour_vec, h){
idx <- hour_vec == h
s <- sum(count[idx])
return(s)
}
x <- lapply(unique(df$hour),
function(k){
l <- list(hour = k,
tot = hour_sum(df[[count_name]], df$hour, k))
return(l)
}) %>%
bind_rows()
df <- left_join(df, x, by = 'hour')
rm(x)
df[paste(prefix,'freq_rel',sep = '_')] <- df[[count_name]] / df$tot
avg_dist <- tapply(distance, list(hour,station), mean) %>%
as.data.frame() %>%
rownames_to_column('hour') %>%
gather(-matches('hour'), key = 'station',
value = value)
avg_dist[paste(prefix, 'avg_dist', sep = '_')] <- avg_dist$value
df <- inner_join(df, avg_dist, by = c('hour','station')) %>%
select(-'tot', -'value')
counting <- function(hour, station, distance, prefix){
# prefix either 'from' or 'to'
t <- table(hour, station)
h <- attr(t,'dimnames')[[1]]  # hour
s <- attr(t,'dimnames')[[2]]  # station
df <- lapply(s, function(x) tibble(
s = rep(x,length(h)),
hour = h)) %>%
bind_rows()
t <- as.numeric(t) %>% tibble()
count_name <- paste(prefix, 'count', sep = '_')
colnames(t) <- count_name
df <- bind_cols(df, t) %>%
rename(station = s)
rm(h,s,t)
# PROBLEM HERE
hour_sum <- function(count, hour_vec, h){
idx <- hour_vec == h
s <- sum(count[idx])
return(s)
}
x <- lapply(unique(df$hour),
function(k){
l <- list(hour = k,
tot = hour_sum(df[[count_name]], df$hour, k))
return(l)
}) %>%
bind_rows()
df <- left_join(df, x, by = 'hour')
rm(x)
df[paste(prefix,'freq_rel',sep = '_')] <- df[[count_name]] / df$tot
avg_dist <- tapply(distance, list(hour,station), mean) %>%
as.data.frame() %>%
rownames_to_column('hour') %>%
gather(-matches('hour'), key = 'station',
value = value)
avg_dist[paste(prefix, 'avg_dist', sep = '_')] <- avg_dist$value
df <- inner_join(df, avg_dist, by = c('hour','station')) %>%
select(-'tot', -'value')
return(df)
}
d <- read.csv('datasets/bikes.csv') %>%
drop_na(to) %>%
mutate(from = as.factor(to), to = as.factor(to), hour = as.factor(hour)) %>%
mutate(date = ymd(date))
stations <- read_csv('datasets/publibike/stations.csv') %>%
select('name', 'longitude', 'latitude')
counting <- function(hour, station, distance, prefix){
# prefix either 'from' or 'to'
t <- table(hour, station)
h <- attr(t,'dimnames')[[1]]  # hour
s <- attr(t,'dimnames')[[2]]  # station
df <- lapply(s, function(x) tibble(
s = rep(x,length(h)),
hour = h)) %>%
bind_rows()
t <- as.numeric(t) %>% tibble()
count_name <- paste(prefix, 'count', sep = '_')
colnames(t) <- count_name
df <- bind_cols(df, t) %>%
rename(station = s)
rm(h,s,t)
hour_sum <- function(count, hour_vec, h){
idx <- hour_vec == h
s <- sum(count[idx])
return(s)
}
x <- lapply(unique(df$hour),
function(k){
l <- list(hour = k,
tot = hour_sum(df[[count_name]], df$hour, k))
return(l)
}) %>%
bind_rows()
df <- left_join(df, x, by = 'hour')
rm(x)
df[paste(prefix,'freq_rel',sep = '_')] <- df[[count_name]] / df$tot
avg_dist <- tapply(distance, list(hour,station), mean) %>%
as.data.frame() %>%
rownames_to_column('hour') %>%
gather(-matches('hour'), key = 'station',
value = value)
avg_dist[paste(prefix, 'avg_dist', sep = '_')] <- avg_dist$value
df <- inner_join(df, avg_dist, by = c('hour','station')) %>%
select(-'tot', -'value')
return(df)
}
dfrom <- counting(d$hour, d$from, d$distance, 'from')
dto <- counting(d$hour, d$to, d$distance, 'to')
df <- full_join(dfrom, dto, by = c('station', 'hour'))
View(df)
View(df)
d <- read_csv('datasets/publibike/rides_by_day.csv') %>%
mutate(Ende = dmy_hm(Ende)) %>%
mutate(
date = date(Ende),
time = hms::as_hms(Ende),
hour = hour(Ende),
minute = minute(Ende),
day = wday(Ende, label = TRUE)
) %>%
mutate(time = hms::round_hms(time, 600))  # round at 10 minutes
meteo <- read_csv('datasets/meteo_suisse/Dati-meteo_Lugano.csv') %>%
mutate(
Data = dmy(Data),
Ora = hms::as_hms(Ora)
) %>%
select(-matches('Data e ora'))
d <- left_join(d, meteo, by = c("date" = "Data", "time" = "Ora")) %>%
rename(id = 'Fahrt: Name')
rm(meteo)
# giovanni.kraushaar@usi.ch
library(readr)
library(tibble)
library(dplyr)
library(stringr)
library(lubridate)
library(geosphere)
d <- read_csv('datasets/publibike/rides_by_day.csv') %>%
mutate(Ende = dmy_hm(Ende)) %>%
mutate(
date = date(Ende),
time = hms::as_hms(Ende),
hour = hour(Ende),
minute = minute(Ende),
day = wday(Ende, label = TRUE)
) %>%
mutate(time = hms::round_hms(time, 600))  # round at 10 minutes
# ----- Merge Meteo
meteo <- read_csv('datasets/meteo_suisse/Dati-meteo_Lugano.csv') %>%
mutate(
Data = dmy(Data),
Ora = hms::as_hms(Ora)
) %>%
select(-matches('Data e ora'))
d <- left_join(d, meteo, by = c("date" = "Data", "time" = "Ora")) %>%
rename(id = 'Fahrt: Name')
rm(meteo)
# ----- Merge Statio
View(d)
loans <- read_csv('datasets/publibike/station_number_of_loans.csv') %>%
rename(id = 'Fahrt: Name', from = "Station - VON") %>%
distinct() %>% # remove duplicate rows
mutate(from = str_replace(.$from, 'Piazza Mercato/Contrada di Verla', 'Contrada di Verla'))
returns <- read_csv('datasets/publibike/station_number_of_returns.csv') %>%
rename(id = "Fahrt: Name", to = "Station - BIS") %>%
distinct() %>%  # some ids were repeated
mutate(to = str_replace(.$to, 'Piazza Mercato/Contrada di Verla', 'Contrada di Verla'))
View(loans)
View(returns)
View(loans)
library(readr)
library(tibble)
library(dplyr)
library(stringr)
library(lubridate)
library(geosphere)
d <- read_csv('datasets/publibike/rides_by_day.csv') %>%
mutate(Ende = dmy_hm(Ende)) %>%
mutate(
date = date(Ende),
time = hms::as_hms(Ende),
hour = hour(Ende),
minute = minute(Ende),
day = wday(Ende, label = TRUE)
) %>%
mutate(time = hms::round_hms(time, 600))  # round at 10 minutes
# ----- Merge Meteo
# meteo <- read_csv('datasets/meteo_suisse/Dati-meteo_Lugano.csv') %>%
#   mutate(
#     Data = dmy(Data),
#     Ora = hms::as_hms(Ora)
#     ) %>%
#   select(-matches('Data e ora'))
#
# d <- left_join(d, meteo, by = c("date" = "Data", "time" = "Ora")) %>%
#   rename(id = 'Fahrt: Name')
#
# rm(meteo)
# ----- Merge Stations
loans <- read_csv('datasets/publibike/station_number_of_loans.csv') %>%
rename(id = 'Fahrt: Name', from = "Station - VON") %>%
distinct() %>% # remove duplicate rows
mutate(from = str_replace(.$from, 'Piazza Mercato/Contrada di Verla', 'Contrada di Verla'))
returns <- read_csv('datasets/publibike/station_number_of_returns.csv') %>%
rename(id = "Fahrt: Name", to = "Station - BIS") %>%
distinct() %>%  # some ids were repeated
mutate(to = str_replace(.$to, 'Piazza Mercato/Contrada di Verla', 'Contrada di Verla'))
trips <- inner_join(loans, returns, by = 'id')
rm(loans, returns)
View(trips)
View(d)
station <- read_csv('datasets/publibike/stations.csv') %>%
select(-matches('id'), -matches('NetworkName')) %>%
select(-matches('address'), -matches('zip'), -matches('city')) %>%
.[,c(1,3,2)]  # first longitude then latitude
trips <- left_join(trips, station, by = c('from' = 'name')) %>%
rename(from_long = 'longitude', from_lat = 'latitude') %>%
left_join(station, by = c('to' = 'name')) %>%
rename(to_long = 'longitude', to_lat = 'latitude') %>%
add_column(distance = distGeo(  # distances are in meters!
p1 = .[,c('from_long','from_lat')],
p2 = .[,c('to_long','to_lat')]))
rm(station)
View(trips)
d <- inner_join(d, trips, by = 'id')
View(d)
d <- read_csv('datasets/publibike/rides_by_day.csv') %>%
mutate(Ende = dmy_hm(Ende)) %>%
mutate(
date = date(Ende),
time = hms::as_hms(Ende),
hour = hour(Ende),
minute = minute(Ende),
day = wday(Ende, label = TRUE)
) %>%
mutate(time = hms::round_hms(time, 600)) %>%  # round at 10 minutes
rename(id = 'Fahrt: Name')
View(d)
d <- read_csv('datasets/publibike/rides_by_day.csv') %>%
mutate(Ende = dmy_hm(Ende)) %>%
mutate(
date = date(Ende),
time = hms::as_hms(Ende),
hour = hour(Ende),
minute = minute(Ende),
day = wday(Ende, label = TRUE)
) %>%
mutate(time = hms::round_hms(time, 600)) %>%  # round at 10 minutes
rename(id = 'Fahrt: Name')
# ----- Merge Meteo
# meteo <- read_csv('datasets/meteo_suisse/Dati-meteo_Lugano.csv') %>%
#   mutate(
#     Data = dmy(Data),
#     Ora = hms::as_hms(Ora)
#     ) %>%
#   select(-matches('Data e ora'))
#
# d <- left_join(d, meteo, by = c("date" = "Data", "time" = "Ora")) %>%
#   rename(id = 'Fahrt: Name')
#
# rm(meteo)
# ----- Merge Stations
loans <- read_csv('datasets/publibike/station_number_of_loans.csv') %>%
rename(id = 'Fahrt: Name', from = "Station - VON") %>%
distinct() %>% # remove duplicate rows
mutate(from = str_replace(.$from, 'Piazza Mercato/Contrada di Verla', 'Contrada di Verla'))
returns <- read_csv('datasets/publibike/station_number_of_returns.csv') %>%
rename(id = "Fahrt: Name", to = "Station - BIS") %>%
distinct() %>%  # some ids were repeated
mutate(to = str_replace(.$to, 'Piazza Mercato/Contrada di Verla', 'Contrada di Verla'))
trips <- inner_join(loans, returns, by = 'id')
rm(loans, returns)
station <- read_csv('datasets/publibike/stations.csv') %>%
select(-matches('id'), -matches('NetworkName')) %>%
select(-matches('address'), -matches('zip'), -matches('city')) %>%
.[,c(1,3,2)]  # first longitude then latitude
trips <- left_join(trips, station, by = c('from' = 'name')) %>%
rename(from_long = 'longitude', from_lat = 'latitude') %>%
left_join(station, by = c('to' = 'name')) %>%
rename(to_long = 'longitude', to_lat = 'latitude') %>%
add_column(distance = distGeo(  # distances are in meters!
p1 = .[,c('from_long','from_lat')],
p2 = .[,c('to_long','to_lat')]))
rm(station)
View(d)
d <- inner_join(d, trips, by = 'id')
rm(trips)
write_csv(d, 'datasets/bikes.csv')
d <- read.csv('datasets/bikes.csv') %>%
drop_na(to) %>%
mutate(from = as.factor(from), to = as.factor(to), hour = as.factor(hour)) %>%
mutate(date = ymd(date))
counting <- function(hour, station, distance, prefix){
# prefix either 'from' or 'to'
t <- table(hour, station)
h <- attr(t,'dimnames')[[1]]  # hour
s <- attr(t,'dimnames')[[2]]  # station
df <- lapply(s, function(x) tibble(
s = rep(x,length(h)),
hour = h)) %>%
bind_rows()
t <- as.numeric(t) %>% tibble()
count_name <- paste(prefix, 'count', sep = '_')
colnames(t) <- count_name
df <- bind_cols(df, t) %>%
rename(station = s)
rm(h,s,t)
hour_sum <- function(count, hour_vec, h){
idx <- hour_vec == h
s <- sum(count[idx])
return(s)
}
x <- lapply(unique(df$hour),
function(k){
l <- list(hour = k,
tot = hour_sum(df[[count_name]], df$hour, k))
return(l)
}) %>%
bind_rows()
df <- left_join(df, x, by = 'hour')
rm(x)
df[paste(prefix,'freq_rel',sep = '_')] <- df[[count_name]] / df$tot
avg_dist <- tapply(distance, list(hour,station), mean) %>%
as.data.frame() %>%
rownames_to_column('hour') %>%
gather(-matches('hour'), key = 'station',
value = value)
avg_dist[paste(prefix, 'avg_dist', sep = '_')] <- avg_dist$value
df <- inner_join(df, avg_dist, by = c('hour','station')) %>%
select(-'tot', -'value')
return(df)
}
dfrom <- counting(d$hour, d$from, d$distance, 'from')
dto <- counting(d$hour, d$to, d$distance, 'to')
df <- full_join(dfrom, dto, by = c('station', 'hour'))
View(df)
View(df)
View(df)
stations <- read_csv('datasets/publibike/stations.csv') %>%
select('name', 'longitude', 'latitude')
View(stations)
df <- full_join(dfrom, dto, by = c('station', 'hour')) %>%
left_join(stations, by = c('station' = 'name'))
library(readr)
library(dplyr)
library(tidyr)
library(tibble)
library(lubridate)
d <- read.csv('datasets/bikes.csv') %>%
drop_na(to) %>%
mutate(from = as.factor(from), to = as.factor(to), hour = as.factor(hour)) %>%
mutate(date = ymd(date))
gather_bike <- function(d, start, end){
d <- d %>%
filter(date >= ymd(start), date <= ymd(end))
counting <- function(hour, station, distance, prefix){
# prefix either 'from' or 'to'
t <- table(hour, station)
h <- attr(t,'dimnames')[[1]]  # hour
s <- attr(t,'dimnames')[[2]]  # station
df <- lapply(s, function(x) tibble(
s = rep(x,length(h)),
hour = h)) %>%
bind_rows()
t <- as.numeric(t) %>% tibble()
count_name <- paste(prefix, 'count', sep = '_')
colnames(t) <- count_name
df <- bind_cols(df, t) %>%
rename(station = s)
rm(h,s,t)
hour_sum <- function(count, hour_vec, h){
idx <- hour_vec == h
s <- sum(count[idx])
return(s)
}
x <- lapply(unique(df$hour),
function(k){
l <- list(hour = k,
tot = hour_sum(df[[count_name]], df$hour, k))
return(l)
}) %>%
bind_rows()
df <- left_join(df, x, by = 'hour')
rm(x)
df[paste(prefix,'freq_rel',sep = '_')] <- df[[count_name]] / df$tot
avg_dist <- tapply(distance, list(hour,station), mean) %>%
as.data.frame() %>%
rownames_to_column('hour') %>%
gather(-matches('hour'), key = 'station',
value = value)
avg_dist[paste(prefix, 'avg_dist', sep = '_')] <- avg_dist$value
df <- inner_join(df, avg_dist, by = c('hour','station')) %>%
select(-'tot', -'value')
return(df)
}
dfrom <- counting(d$hour, d$from, d$distance, 'from')
dto <- counting(d$hour, d$to, d$distance, 'to')
stations <- read_csv('datasets/publibike/stations.csv') %>%
select('name', 'longitude', 'latitude')
df <- full_join(dfrom, dto, by = c('station', 'hour')) %>%
left_join(stations, by = c('station' = 'name'))
return(df)
}
# DOW Day of the Week encoding
#  A = all
#  W = weekend
#  D = workday
# Period encoding
#  S = summer
#  F = fall
dsa <- gather_bike(d,'2019-07-20','2019-08-19') %>%
add_column( DOW = 'A', period = 'S')
dsw <- d %>%
filter(day == 'Sat' | day == 'Sun') %>%
gather_bike('2019-07-20','2019-08-19') %>%
add_column( DOW = 'W', period = 'S')
dsd <- d %>%
filter(day != 'Sat' | day != 'Sun') %>%
gather_bike('2019-07-20','2019-08-19') %>%
add_column( DOW = 'D', period = 'S')
dfa <- gather_bike(d,'2019-09-16','2019-10-15') %>%
add_column( DOW = 'A', period = 'F')
dfw <- d %>%
filter(day == 'Sat' | day == 'Sun') %>%
gather_bike('2019-09-16','2019-10-15') %>%
add_column( DOW = 'W', period = 'F')
dfd <- d %>%
filter(day != 'Sat' | day != 'Sun') %>%
gather_bike('2019-09-16','2019-10-15') %>%
add_column( DOW = 'D', period = 'F')
df <- bind_rows(dsa, dsw, dsd, dfa, dfw, dfd) %>%
drop_na(from_avg_dist, to_avg_dist)
View(df)
source('~/Downloads/usi-hackathon-19/src/r/gather_bikes.R')
View(df)
