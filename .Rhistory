mutate(commutes = as.numeric(commutes))
df <- table(d$time) %>%
tibble(time = names(.), rides = .)
View(df)
d <- read_csv('datasets/bikes.csv') %>%
mutate(time = paste(.$date, .$hour, sep = '_'))
d <- read_csv('datasets/bikes.csv')
d <- read_csv('datasets/bikes.csv') %>%
select(-'time') %>%
mutate(., time = paste(.$date, .$hour, sep = '_'))
warnings()
View(d)
d <- read_csv('datasets/bikes.csv') %>%
select(-'Ende') %>%
mutate(., time = paste(.$date, .$hour, sep = '_'))
View(d)
View(d)
s <- read_csv('datasets/swisscom_csv/tripcount_hourly_withinarea.csv') %>%
mutate(date = ymd_hms(.$Date)) %>%
transmute(time = paste(date(.$date), hour(.$date), sep = '_'),
commutes = `Reason: Commute`) %>%
filter(commutes != '<20') %>%
mutate(commutes = as.numeric(commutes))
View(s)
df <- table(d$time) %>%
tibble(., time = names(.), rides = .)
df <- inner_join(df, s, by = 'time')
View(df)
lm(rides ~ commutes, df) %>% summary()
d <- read_csv('datasets/bikes.csv') %>%
select(-'Ende') %>%
mutate(., time = paste(.$date, .$hour, sep = '_'))
s <- read_csv('datasets/swisscom_csv/tripcount_hourly_withinarea.csv') %>%
mutate(date = ymd_hms(.$Date)) %>%
transmute(time = paste(date(.$date), hour(.$date), sep = '_'),
commutes = `Reason: Commute`) %>%
filter(commutes != '<20') %>%
mutate(commutes = as.numeric(commutes))
df <- table(d$time) %>%
tibble(., time = names(.), rides = .)
View(df)
View(d)
View(s)
df <- inner_join(df, s, by = 'time')
View(df)
View(d)
str(d)
str(s)
df <- full_join(df, s, by = 'time')
View(df)
d <- read_csv('datasets/bikes.csv') %>%
select(-'Ende') %>%
mutate(., time = paste(.$date, .$hour, sep = '_'))
View(d)
s <- read_csv('datasets/swisscom_csv/tripcount_hourly_withinarea.csv') %>%
mutate(date = ymd_hms(.$Date)) %>%
transmute(time = paste(date(.$date), hour(.$date), sep = '_'), commutes = `Reason: Commute`) %>%
filter(commutes != '<20') %>%
mutate(commutes = as.numeric(commutes))
df <- table(d$time) %>%
tibble(., time = names(.), rides = .)
df <- inner_join(df, s, by = 'time')
View(s)
d <- as.data.frame(d)
d <- as.data.frame(d)
s <- as.data.frame(s)
View(d)
View(s)
source('~/Downloads/usi-hackathon-19/src/r/publibike.R')
View(d_na)
source('~/Downloads/usi-hackathon-19/src/r/publibike.R')
d <- read_csv('datasets/bikes_with_na.csv') %>%
select(-'Ende') %>%
mutate(., time = paste(.$date, .$hour, sep = '_'))
d <- read_csv('datasets/bike_with_na.csv') %>%
select(-'Ende') %>%
mutate(., time = paste(.$date, .$hour, sep = '_'))
problems()
View(d)
View(d)
s <- read_csv('datasets/swisscom_csv/tripcount_hourly_withinarea.csv') %>%
mutate(date = ymd_hms(.$Date)) %>%
transmute(time = paste(date(.$date), hour(.$date), sep = '_'),
commutes = `Reason: Commute`) %>%
filter(commutes != '<20') %>%
mutate(commutes = as.numeric(commutes))
d <- as.data.frame(d)
s <- as.data.frame(s)
df <- table(d$time) %>%
tibble(., time = names(.), rides = .)
View(df)
lm(rides ~ commutes, df) %>% summary()
View(df)
View(s)
s <- read_csv('datasets/swisscom_csv/tripcount_hourly_withinarea.csv') %>%
mutate(date = ymd_hms(.$Date)) %>%
transmute(time = paste(date(.$date), hour(.$date), sep = '_'),
commutes = `Reason: Commute`) %>%
filter(commutes != '<20') %>%
mutate(commutes = as.numeric(commutes))
str(s)
d <- read_csv('datasets/bike_with_na.csv') %>%
select(-'Ende') %>%
mutate(., time = paste(.$date, .$hour, sep = '_'))
s <- read_csv('datasets/swisscom_csv/tripcount_hourly_withinarea.csv') %>%
mutate(date = ymd_hms(.$Date)) %>%
transmute(time = paste(date(.$date), hour(.$date), sep = '_'),
commutes = `Reason: Commute`) %>%
filter(commutes != '<20') %>%
mutate(commutes = as.numeric(commutes))
d <- read.csv('datasets/bike_with_na.csv') %>%
select(-'Ende') %>%
mutate(., time = paste(.$date, .$hour, sep = '_'))
d <- read_csv('datasets/bike_with_na.csv') %>%
select(-'Ende') %>%
mutate(., time = paste(.$date, .$hour, sep = '_'))
s <- read_csv('datasets/swisscom_csv/tripcount_hourly_withinarea.csv') %>%
mutate(date = ymd_hms(.$Date)) %>%
transmute(time = paste(date(.$date), hour(.$date), sep = '_'),
commutes = `Reason: Commute`) %>%
filter(commutes != '<20') %>%
mutate(commutes = as.numeric(commutes))
View(df)
df <- table(d$time)
df <- table(d$time) %>%
tibble(time = names(.), rides = .)
View(df)
df <- inner_join(df, s, by = 'time')
View(d)
View(s)
library(readr)
library(tibble)
library(dplyr)
library(stringr)
library(lubridate)
library(geosphere)
d <- read_csv('datasets/publibike/rides_by_day.csv') %>%
mutate(Ende = dmy_hm(Ende)) %>%
mutate(
date = date(Ende),
time = hms::as_hms(Ende),
hour = hour(Ende),
minute = minute(Ende),
day = wday(Ende, label = TRUE)
) %>%
mutate(time = hms::round_hms(time, 600)) %>%  # round at 10 minutes
rename(id = 'Fahrt: Name')
# ----- Merge Meteo
# meteo <- read_csv('datasets/meteo_suisse/Dati-meteo_Lugano.csv') %>%
#   mutate(
#     Data = dmy(Data),
#     Ora = hms::as_hms(Ora)
#     ) %>%
#   select(-matches('Data e ora'))
#
# d <- left_join(d, meteo, by = c("date" = "Data", "time" = "Ora")) %>%
#   rename(id = 'Fahrt: Name')
#
# rm(meteo)
# ----- Merge Stations
loans <- read_csv('datasets/publibike/station_number_of_loans.csv') %>%
rename(id = 'Fahrt: Name', from = "Station - VON") %>%
distinct() %>% # remove duplicate rows
mutate(from = str_replace(.$from,
'Piazza Mercato/Contrada di Verla',
'Contrada di Verla'))
returns <- read_csv('datasets/publibike/station_number_of_returns.csv') %>%
rename(id = "Fahrt: Name", to = "Station - BIS") %>%
distinct() %>%  # some ids were repeated
mutate(to = str_replace(.$to, 'Piazza Mercato/Contrada di Verla',
'Contrada di Verla'))
trips <- inner_join(loans, returns, by = 'id')
rm(loans, returns)
station <- read_csv('datasets/publibike/stations.csv') %>%
select(-matches('id'), -matches('NetworkName')) %>%
select(-matches('address'), -matches('zip'), -matches('city')) %>%
.[,c(1,3,2)]  # first longitude then latitude
trips <- left_join(trips, station, by = c('from' = 'name')) %>%
rename(from_long = 'longitude', from_lat = 'latitude') %>%
left_join(station, by = c('to' = 'name')) %>%
rename(to_long = 'longitude', to_lat = 'latitude') %>%
add_column(distance = distGeo(  # distances are in meters!
p1 = .[,c('from_long','from_lat')],
p2 = .[,c('to_long','to_lat')]))
rm(station)
d <- inner_join(d, trips, by = 'id')
source('~/Downloads/usi-hackathon-19/src/r/publibike.R')
library(readr)
library(tibble)
library(dplyr)
library(lubridate)
library(stringr)
library(stargazer)
library(tidyr)
library(ggplot2)
d <- read_csv('datasets/biks_with_na.csv') %>%
select(-'Ende') %>%
mutate(., time = paste(.$date, .$hour, sep = '_'))
s <- read_csv('datasets/swisscom_csv/tripcount_hourly_withinarea.csv') %>%
mutate(date = ymd_hms(.$Date)) %>%
transmute(time = paste(date(.$date), hour(.$date), sep = '_'),
commutes = `Reason: Commute`) %>%
filter(commutes != '<20') %>%
mutate(commutes = as.numeric(commutes))
df <- table(d$time) %>%
tibble(time = names(.), rides = .)
df <- inner_join(df, s, by = 'time')
d <- read_csv('datasets/biks_with_na.csv') %>%
select(-'Ende') %>%
mutate(., time = paste(.$date, .$hour, sep = '_'))
s <- read_csv('datasets/swisscom_csv/tripcount_hourly_withinarea.csv') %>%
mutate(date = ymd_hms(.$Date)) %>%
transmute(time = paste(date(.$date), hour(.$date), sep = '_'),
commutes = `Reason: Commute`) %>%
filter(commutes != '<20') %>%
mutate(commutes = as.numeric(commutes))
d <- read_csv('datasets/biks_with_na.csv') %>%
select(-'Ende') %>%
mutate(., time = paste(.$date, .$hour, sep = '_'))
d <- read_csv('datasets/bikes_with_na.csv') %>%
select(-'Ende') %>%
mutate(., time = paste(.$date, .$hour, sep = '_'))
s <- read_csv('datasets/swisscom_csv/tripcount_hourly_withinarea.csv') %>%
mutate(date = ymd_hms(.$Date)) %>%
transmute(time = paste(date(.$date), hour(.$date), sep = '_'),
commutes = `Reason: Commute`) %>%
filter(commutes != '<20') %>%
mutate(commutes = as.numeric(commutes))
df <- table(d$time) %>%
tibble(time = names(.), rides = .)
d <- read_csv('datasets/bikes_with_na.csv') %>%
select(-'Ende') %>%
mutate(., time = paste(.$date, .$hour, sep = '_'))
d <- read_csv('datasets/bikes_with_na.csv')
View(d)
d <- read_csv('datasets/bikes_with_na.csv') %>%
mutate(., time = paste(.$date, .$hour, sep = '_'))
s <- read_csv('datasets/swisscom_csv/tripcount_hourly_withinarea.csv') %>%
mutate(date = ymd_hms(.$Date)) %>%
transmute(time = paste(date(.$date), hour(.$date), sep = '_'),
commutes = `Reason: Commute`) %>%
filter(commutes != '<20') %>%
mutate(commutes = as.numeric(commutes))
df <- table(d$time) %>%
tibble(time = names(.), rides = .)
df <- inner_join(df, s, by = 'time')
lm(rides ~ commutes, df) %>% summary()
dfp <- df %>%
filter(str_detect(.$time, '(?<=_)[78]|17|18|12|13$'))
lm(rides ~ commutes, dfp) %>% summary()
df %>%  ## non pick hours
filter(!str_detect(.$time, '(?<=_)[78]|17|18|12|13$')) %>%
lm(rides ~ commutes, .) %>%
summary()
# Regression 3 - drunk hours (also more busses, substitution effect)
dfd <- df %>%
filter(str_detect(.$time, '(?<=_)(2[1-3])$|(?<=_)[0-2]$'))
lm(rides ~ commutes, dfd) %>% summary()
df %>%
filter(str_detect(.$time, '(?<=_)([0-3]|23)$')) %>%
lm(rides ~ commutes, .) %>%
summary()
# Regression 4 - control dummies
dff <- df
df <- dff
split_day <- function(x){
if (length(x) > 1) return(sapply(x, split_day))
out <- if (x > 20 | x == 5 | x == 0) 'E' else if (x < 5 & x > 0) 'N' else 'D'
return(out)
}
wday_dummy_gen <- function(x){
if (length(x) > 1) return(sapply(x, wday_dummy_gen))
out <- if (x %in% c('Sat','Sun')) TRUE else FALSE
return(out)
}
df <- df %>%
add_column(hour = as.numeric(str_extract(.$time, '(?<=_)\\d+$'))) %>%
add_column(day_time = split_day(.$hour)) %>%
add_column(weekend = .$time %>%
str_extract('^.+(?=_)') %>%
ymd() %>%
wday(label = TRUE) %>%
wday_dummy_gen())
dummyfy <- function(x){
x <- as.factor(x)
d <- lapply(levels(x), function(y) if_else(x == y, TRUE, FALSE)) %>%
bind_cols()
colnames(d) <- levels(x)
return(d)
}
df <- df %>%
bind_cols(dummyfy(df$day_time))
lm(rides ~ commutes + D + E + weekend, df) %>%
summary()
lm(rides ~ commutes + low_transport + weekend,
df %>% mutate(low_transport = D+E)) %>%
summary()
# (1)
lm(rides ~ commutes, filter(df, !weekend)) %>%
stargazer(out = 'reg1.tex')
reg2 <- lm(rides ~ commutes, filter(df, !weekend, D))
reg3 <- lm(rides ~ commutes, filter(df, !weekend, E))
reg4 <- lm(rides ~ commutes, filter(df, !weekend, N))
stargazer(reg2,reg3,reg4, out = 'multireg.tex')
rm(d,dfd,dff,dfp,reg2,reg3,reg4,s)
# Regressions with tpl
tpl <- read_csv('datasets/tpl_density.csv')
d <- df %>%
mutate(time = ymd_h(time)) %>%
left_join(tpl, by = c('time' = 'dh')) %>%
rename(buses = count) %>%
replace_na(list(buses = 0))
reg_tpl <- lm(rides ~ commutes + buses, filter(d, !weekend))
summary(reg_tpl)
reg_tpl2 <- lm(rides ~ commutes + buses, filter(d, !weekend, D))
reg_tpl3 <- lm(rides ~ commutes + buses, filter(d, !weekend, E))
stargazer(reg_tpl, reg_tpl2, reg_tpl3, out = 'reg_tpl.tex')
rm(reg_tpl,reg_tpl2,reg_tpl3,df,tpl)
IV_data <- filter(d, !weekend, D)
IV_rides <- lm(  # dependent variable (y)
rides ~ buses,
data = IV_data
)
IV_commutes <-  lm(  # independent variable (x)
commutes ~ buses,
data = IV_data
)
residuals_y <- IV_rides$residuals
residuals_x <- IV_commutes$residuals
residual_data <- IV_data %>%
add_column(residuals_y = residuals_y, residuals_x = residuals_x)
reg_res_static <- lm(
residuals_y ~ residuals_x,
data = residual_data
)
summary(reg_res_static)
IV_fn <- function(d){
res_y <- lm(rides ~ buses, d)$residuals
res_x <- lm(commutes ~ buses, d)$residuals
d <- add_column(d, res_y, res_x)
r <- lm(res_y ~ res_x, d)
s <- summary(r)
l <- list(
b_0 = r$coefficients[1],
b_1 = r$coefficients[2],
se_0 = s$coefficients[1,2],
se_1 = s$coefficients[2,2],
p_0 = s$coefficients[1,4],
p_1 = s$coefficients[2,4],
R_2 = s$r.squared
)
return(l)
}
weeks <- unique(week(IV_data$time))
x <- lapply(weeks, function(w){
d <- filter(IV_data, week(time) == w)
c(week = w, IV_fn(d))
}) %>% bind_rows()
ggplot(x, aes(week, b_1)) + geom_point()
ggsave('weekly_IV_reg.pdf', device = 'pdf')
weeks_1 <- weeks[weeks < quantile(weeks, .5)]
weeks_2 <- weeks[weeks > quantile(weeks, .5)]
wl <- list(weeks_1, weeks_2)
x <- lapply(wl, function(w){
d <- filter(IV_data, week(time) %in% w)
IV_fn(d)
}) %>% bind_rows() %>%
add_column(week_split = c('early', 'late'))
IV_fn_table <- function(d){
res_y <- lm(rides ~ buses, d)$residuals
res_x <- lm(commutes ~ buses, d)$residuals
d <- add_column(d, res_y, res_x)
r <- lm(res_y ~ res_x, d)
return(r)
}
x <- lapply(wl, function(w){
d <- filter(IV_data, week(time) %in% w)
IV_fn_table(d)
})
stargazer(x[[1]], x[[2]], out = 'IV_reg_summer.tex')
library(readr)
library(tibble)
library(dplyr)
library(lubridate)
library(stringr)
library(stargazer)
library(tidyr)
library(ggplot2)
# Regression 1
d <- read_csv('datasets/bikes_with_na.csv') %>%
mutate(., time = paste(.$date, .$hour, sep = '_'))
s <- read_csv('datasets/swisscom_csv/tripcount_hourly_withinarea.csv') %>%
mutate(date = ymd_hms(.$Date)) %>%
transmute(time = paste(date(.$date), hour(.$date), sep = '_'),
commutes = `Reason: Commute`) %>%
filter(commutes != '<20') %>%
mutate(commutes = as.numeric(commutes))
df <- table(d$time) %>%
tibble(time = names(.), rides = .)
df <- inner_join(df, s, by = 'time')
lm(rides ~ commutes, df) %>% summary()
# Regression 2 - Pick hours
dfp <- df %>%
filter(str_detect(.$time, '(?<=_)[78]|17|18|12|13$'))
lm(rides ~ commutes, dfp) %>% summary()
df %>%  ## non pick hours
filter(!str_detect(.$time, '(?<=_)[78]|17|18|12|13$')) %>%
lm(rides ~ commutes, .) %>%
summary()
# Regression 3 - drunk hours (also more busses, substitution effect)
dfd <- df %>%
filter(str_detect(.$time, '(?<=_)(2[1-3])$|(?<=_)[0-2]$'))
lm(rides ~ commutes, dfd) %>% summary()
df %>%
filter(str_detect(.$time, '(?<=_)([0-3]|23)$')) %>%
lm(rides ~ commutes, .) %>%
summary()
# Regression 4 - control dummies
dff <- df
df <- dff
split_day <- function(x){
if (length(x) > 1) return(sapply(x, split_day))
out <- if (x > 20 | x == 5 | x == 0) 'E' else if (x < 5 & x > 0) 'N' else 'D'
return(out)
}
wday_dummy_gen <- function(x){
if (length(x) > 1) return(sapply(x, wday_dummy_gen))
out <- if (x %in% c('Sat','Sun')) TRUE else FALSE
return(out)
}
df <- df %>%
add_column(hour = as.numeric(str_extract(.$time, '(?<=_)\\d+$'))) %>%
add_column(day_time = split_day(.$hour)) %>%
add_column(weekend = .$time %>%
str_extract('^.+(?=_)') %>%
ymd() %>%
wday(label = TRUE) %>%
wday_dummy_gen())
## Factor Encoding
#  D - day (6-20)
#  E - evening and early morning (21-24 + 5) -> low density
#  N - night (1-4)
dummyfy <- function(x){
x <- as.factor(x)
d <- lapply(levels(x), function(y) if_else(x == y, TRUE, FALSE)) %>%
bind_cols()
colnames(d) <- levels(x)
return(d)
}
df <- df %>%
bind_cols(dummyfy(df$day_time))
lm(rides ~ commutes + D + E + weekend, df) %>%
summary()
lm(rides ~ commutes + low_transport + weekend,
df %>% mutate(low_transport = D+E)) %>%
summary()
# Regrssions on paper
# (1)
lm(rides ~ commutes, filter(df, !weekend)) %>%
stargazer(out = 'reg1.tex')
reg2 <- lm(rides ~ commutes, filter(df, !weekend, D))
reg3 <- lm(rides ~ commutes, filter(df, !weekend, E))
reg4 <- lm(rides ~ commutes, filter(df, !weekend, N))
stargazer(reg2,reg3,reg4, out = 'multireg.tex')
rm(d,dfd,dff,dfp,reg2,reg3,reg4,s)
# Regressions with tpl
tpl <- read_csv('datasets/tpl_density.csv')
d <- df %>%
mutate(time = ymd_h(time)) %>%
left_join(tpl, by = c('time' = 'dh')) %>%
rename(buses = count) %>%
replace_na(list(buses = 0))
reg_tpl <- lm(rides ~ commutes + buses, filter(d, !weekend))
summary(reg_tpl)
reg_tpl2 <- lm(rides ~ commutes + buses, filter(d, !weekend, D))
reg_tpl3 <- lm(rides ~ commutes + buses, filter(d, !weekend, E))
stargazer(reg_tpl, reg_tpl2, reg_tpl3, out = 'reg_tpl.tex')
rm(reg_tpl,reg_tpl2,reg_tpl3,df,tpl)
library(dplyr)
library(readr)
library(lubridate)
library(fs)
library(ggplot2)
files <- fs::dir_ls('datasets/tpl/lines_events/')
d <- lapply(files, function(x) read_csv(x)[,c(1,7,9)]) %>%
bind_rows()
d[!is.na(d$X1),1] <- d[!is.na(d$X1),4]
d <- d %>%
mutate(date = dmy(DATA)) %>%
mutate(hour = hour(TRANS.PROGRAMMATO)) %>%
select(-X1, -DATA, -TRANS.PROGRAMMATO) %>%
mutate(dh = paste(date, hour, sep = '_'))
d <- tapply(d$VEICOLO, as.factor(d$dh), function(x) length(unique(x))) %>%
tibble(
dh = names(.),
count = .) %>%
mutate(dh = ymd_h(dh))
write_csv(d, 'datasets/tpl_density.csv')
g <- d %>%
transmute(hour = hour(dh), count = count) %>%
group_by(hour) %>%
summarise(avg = mean(count))
rm(files)
ggplot(g, aes(hour,avg)) + geom_col()
ggplot(g, aes(hour,avg)) + theme_wsj() + geom_col()
install.packages("ggthemes")
library(ggthemes)
ggplot(g, aes(hour,avg)) + theme_wsj() + geom_col()
ggplot(g, aes(hour,avg), palette('Reds')) + theme_wsj() + geom_col()
ggplot(g, aes(hour,avg)) + theme_wsj() + geom_col()
ggplot(g, aes(hour,avg)) + theme_wsj() + geom_col()
ggsave('tpl_density.pdf', device = 'pdf', width = 15, height = 6)
