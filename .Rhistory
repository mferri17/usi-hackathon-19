View(avg_dist)
avg_dist <- tapply(d$distance, list(d$hour,d$from), mean) %>%
as.data.frame() %>%
rownames_to_column('hour')
avg_dist <- tapply(d$distance, list(d$hour,d$from), mean) %>%
as.data.frame() %>%
rownames_to_column('hour') %>%
gather(-matches(hour), key = 'from', value = 'avg_dist')
avg_dist <- tapply(d$distance, list(d$hour,d$from), mean) %>%
as.data.frame() %>%
rownames_to_column('hour') %>%
gather(-matches('hour'), key = 'from', value = 'avg_dist')
dfrom <- inner_join(dfrom, avg_dist, by = c('hour','from'))
View(dfrom)
pos <- read_csv('datasets/publibike/stations.csv')
View(pos)
stations <- read_csv('datasets/publibike/stations.csv')
rm(pos)
View(stations)
stations <- read_csv('datasets/publibike/stations.csv') %>%
select('name', 'longitude', 'latitude')
d <- read.csv('datasets/bikes.csv') %>%
drop_na(from) %>%
mutate(from = as.factor(from), to = as.factor(to), hour = as.factor(hour))
stations <- read_csv('datasets/publibike/stations.csv') %>%
select('name', 'longitude', 'latitude')
t <- table(d$hour,d$from)
hour <- attr(t,'dimnames')[[1]]
from <- attr(t,'dimnames')[[2]]
dfrom <- lapply(from, function(x) tibble(
from = rep(x,length(hour)),
hour = hour)) %>%
bind_rows()
t <- as.numeric(t) %>% tibble()
colnames(t) <- 'count_from'
dfrom <- bind_cols(dfrom, t)
rm(hour,from,t)
x <- dfrom %>% group_by(hour) %>% summarise(tot = sum(count_from))
dfrom <- inner_join(dfrom, x, by = 'hour') %>%
mutate(freq_rel_from = count_from / tot)
rm(x)
avg_dist <- tapply(d$distance, list(d$hour,d$from), mean) %>%
as.data.frame() %>%
rownames_to_column('hour') %>%
gather(-matches('hour'), key = 'from', value = 'avg_dist')
dfrom <- inner_join(dfrom, avg_dist, by = c('hour','from')) %>%
left_join(stations, by = c('from' = 'name'))
d <- read.csv('datasets/bikes.csv') %>%
drop_na(from) %>%
mutate(from = as.factor(from), to = as.factor(to), hour = as.factor(hour)) %>%
mutate(date = ymd(date))
library(llubridate)
d <- read.csv('datasets/bikes.csv') %>%
drop_na(from) %>%
mutate(from = as.factor(from), to = as.factor(to), hour = as.factor(hour)) %>%
mutate(date = ymd(date))
library(lubridate)
d <- read.csv('datasets/bikes.csv') %>%
drop_na(from) %>%
mutate(from = as.factor(from), to = as.factor(to), hour = as.factor(hour)) %>%
mutate(date = ymd(date))
d <- read.csv('datasets/bikes.csv') %>%
drop_na(from) %>%
mutate(from = as.factor(from), to = as.factor(to), hour = as.factor(hour)) %>%
mutate(date = ymd(date)) %>%
filter(date >= ymd('2019-07-19'), date <= ymd('2019-08-20'))
d <- read.csv('datasets/bikes.csv') %>%
drop_na(from) %>%
mutate(from = as.factor(from), to = as.factor(to), hour = as.factor(hour)) %>%
mutate(date = ymd(date)) %>%
filter(date >= ymd('2019-07-19'), date <= ymd('2019-08-20'))
stations <- read_csv('datasets/publibike/stations.csv') %>%
select('name', 'longitude', 'latitude')
t <- table(d$hour,d$from)
hour <- attr(t,'dimnames')[[1]]
from <- attr(t,'dimnames')[[2]]
dfrom <- lapply(from, function(x) tibble(
from = rep(x,length(hour)),
hour = hour)) %>%
bind_rows()
t <- as.numeric(t) %>% tibble()
colnames(t) <- 'count_from'
dfrom <- bind_cols(dfrom, t)
rm(hour,from,t)
x <- dfrom %>% group_by(hour) %>% summarise(tot = sum(count_from))
dfrom <- inner_join(dfrom, x, by = 'hour') %>%
mutate(freq_rel_from = count_from / tot)
rm(x)
avg_dist <- tapply(d$distance, list(d$hour,d$from), mean) %>%
as.data.frame() %>%
rownames_to_column('hour') %>%
gather(-matches('hour'), key = 'from', value = 'avg_dist')
dfrom <- inner_join(dfrom, avg_dist, by = c('hour','from')) %>%
left_join(stations, by = c('from' = 'name'))
d <- read.csv('datasets/bikes.csv') %>%
drop_na(from) %>%
mutate(from = as.factor(from), to = as.factor(to), hour = as.factor(hour)) %>%
mutate(date = ymd(date)) %>%
filter(date >= ymd('2019-07-19'), date <= ymd('2019-08-20'))
stations <- read_csv('datasets/publibike/stations.csv') %>%
select('name', 'longitude', 'latitude')
t <- table(d$hour,d$from)
hour <- attr(t,'dimnames')[[1]]
from <- attr(t,'dimnames')[[2]]
dfrom <- lapply(from, function(x) tibble(
from = rep(x,length(hour)),
hour = hour)) %>%
bind_rows()
t <- as.numeric(t) %>% tibble()
colnames(t) <- 'count_from'
dfrom <- bind_cols(dfrom, t)
rm(hour,from,t)
x <- dfrom %>% group_by(hour) %>% summarise(tot = sum(count_from))
dfrom <- inner_join(dfrom, x, by = 'hour') %>%
mutate(from_freq_rel = count_from / tot)
rm(x)
avg_dist <- tapply(d$distance, list(d$hour,d$from), mean) %>%
as.data.frame() %>%
rownames_to_column('hour') %>%
gather(-matches('hour'), key = 'from', value = 'avg_dist')
dfrom <- inner_join(dfrom, avg_dist, by = c('hour','from')) %>%
left_join(stations, by = c('from' = 'name')) %>%
select(-'tot')
d <- read.csv('datasets/bikes.csv') %>%
drop_na(from) %>%
mutate(from = as.factor(from), to = as.factor(to), hour = as.factor(hour)) %>%
mutate(date = ymd(date)) %>%
filter(date >= ymd('2019-07-19'), date <= ymd('2019-08-20'))
stations <- read_csv('datasets/publibike/stations.csv') %>%
select('name', 'longitude', 'latitude')
t <- table(d$hour,d$from)
hour <- attr(t,'dimnames')[[1]]
from <- attr(t,'dimnames')[[2]]
dfrom <- lapply(from, function(x) tibble(
from = rep(x,length(hour)),
hour = hour)) %>%
bind_rows()
t <- as.numeric(t) %>% tibble()
colnames(t) <- 'count_from'
dfrom <- bind_cols(dfrom, t)
rm(hour,from,t)
x <- dfrom %>% group_by(hour) %>% summarise(tot = sum(count_from))
dfrom <- inner_join(dfrom, x, by = 'hour') %>%
mutate(from_freq_rel = count_from / tot)
rm(x)
avg_dist <- tapply(d$distance, list(d$hour,d$from), mean) %>%
as.data.frame() %>%
rownames_to_column('hour') %>%
gather(-matches('hour'), key = 'from', value = 'from_avg_dist')
dfrom <- inner_join(dfrom, avg_dist, by = c('hour','from')) %>%
left_join(stations, by = c('from' = 'name')) %>%
select(-'tot')
d <- read.csv('datasets/bikes.csv') %>%
drop_na(to) %>%
mutate(from = as.factor(to), to = as.factor(to), hour = as.factor(hour)) %>%
mutate(date = ymd(date))
stations <- read_csv('datasets/publibike/stations.csv') %>%
select('name', 'longitude', 'latitude')
d <- d %>%
filter(date >= ymd('2019-07-19'), date <= ymd('2019-08-20'))
# FROM
t <- table(d$hour,d$from)
hour <- attr(t,'dimnames')[[1]]
to <- attr(t,'dimnames')[[2]]
dfrom <- lapply(to, function(x) tibble(
from = rep(x,length(hour)),
hour = hour)) %>%
bind_rows()
t <- as.numeric(t) %>% tibble()
colnames(t) <- 'from_count'
dfrom <- bind_cols(dfrom, t)
rm(hour,to,t)
x <- dfrom %>% group_by(hour) %>% summarise(tot = sum(count_from))
dfrom <- inner_join(dfrom, x, by = 'hour') %>%
mutate(from_freq_rel = count_from / tot)
rm(x)
avg_dist <- tapply(d$distance, list(d$hour,d$from), mean) %>%
as.data.frame() %>%
rownames_to_column('hour') %>%
gather(-matches('hour'), key = 'from', value = 'from_avg_dist')
dfrom <- inner_join(dfrom, avg_dist, by = c('hour','from')) %>%
select(-'tot')
d <- read.csv('datasets/bikes.csv') %>%
drop_na(to) %>%
mutate(from = as.factor(to), to = as.factor(to), hour = as.factor(hour)) %>%
mutate(date = ymd(date))
stations <- read_csv('datasets/publibike/stations.csv') %>%
select('name', 'longitude', 'latitude')
d <- read.csv('datasets/bikes.csv') %>%
drop_na(to) %>%
mutate(from = as.factor(to), to = as.factor(to), hour = as.factor(hour)) %>%
mutate(date = ymd(date))
stations <- read_csv('datasets/publibike/stations.csv') %>%
select('name', 'longitude', 'latitude')
d <- d %>%
filter(date >= ymd('2019-07-19'), date <= ymd('2019-08-20'))
# FROM
t <- table(d$hour,d$from)
hour <- attr(t,'dimnames')[[1]]
from <- attr(t,'dimnames')[[2]]
dfrom <- lapply(from, function(x) tibble(
from = rep(x,length(hour)),
hour = hour)) %>%
bind_rows()
t <- as.numeric(t) %>% tibble()
colnames(t) <- 'from_count'
dfrom <- bind_cols(dfrom, t)
rm(hour,from,t)
x <- dfrom %>% group_by(hour) %>% summarise(tot = sum(count_from))
x <- dfrom %>% group_by(hour) %>% summarise(tot = sum(from_count))
dfrom <- inner_join(dfrom, x, by = 'hour') %>%
mutate(from_freq_rel = from_count / tot)
rm(x)
avg_dist <- tapply(d$distance, list(d$hour,d$from), mean) %>%
as.data.frame() %>%
rownames_to_column('hour') %>%
gather(-matches('hour'), key = 'from', value = 'from_avg_dist')
dfrom <- inner_join(dfrom, avg_dist, by = c('hour','from')) %>%
select(-'tot')
# TO
t <- table(d$hour,d$to)
hour <- attr(t,'dimnames')[[1]]
to <- attr(t,'dimnames')[[2]]
dfrom <- lapply(to, function(x) tibble(
to = rep(x,length(hour)),
hour = hour)) %>%
bind_rows()
t <- as.numeric(t) %>% tibble()
colnames(t) <- 'to_count'
# TO
t <- table(d$hour,d$to)
hour <- attr(t,'dimnames')[[1]]
to <- attr(t,'dimnames')[[2]]
dto <- lapply(to, function(x) tibble(
to = rep(x,length(hour)),
hour = hour)) %>%
bind_rows()
t <- as.numeric(t) %>% tibble()
colnames(t) <- 'to_count'
# TO
t <- table(d$hour,d$to)
hour <- attr(t,'dimnames')[[1]]
to <- attr(t,'dimnames')[[2]]
dto <- lapply(to, function(x) tibble(
to = rep(x,length(hour)),
hour = hour)) %>%
bind_rows()
t <- as.numeric(t) %>% tibble()
colnames(t) <- 'to_count'
dto <- bind_cols(dto, t)
rm(hour,to,t)
t <- as.numeric(t) %>% tibble()
x <- dto %>% group_by(hour) %>% summarise(tot = sum(to_count))
dto <- inner_join(dto, x, by = 'hour') %>%
mutate(to_freq_rel = to_count / tot)
rm(x)
avg_dist <- tapply(d$distance, list(d$hour,d$to), mean) %>%
as.data.frame() %>%
rownames_to_column('hour') %>%
gather(-matches('hour'), key = 'to', value = 'to_avg_dist')
dfrom <- inner_join(dto, avg_dist, by = c('hour','to')) %>%
select(-'tot')
View(dto)
View(dfrom)
View(dto)
dto <- inner_join(dto, avg_dist, by = c('hour','to')) %>%
select(-'tot')
out <- inner_join(dfrom,dto, by = c('to' = 'from', hour))
out <- inner_join(dfrom,dto, by = c('to' = 'from', 'hour'))
d <- read.csv('datasets/bikes.csv') %>%
drop_na(to) %>%
mutate(from = as.factor(to), to = as.factor(to), hour = as.factor(hour)) %>%
mutate(date = ymd(date))
stations <- read_csv('datasets/publibike/stations.csv') %>%
select('name', 'longitude', 'latitude')
d <- d %>%
filter(date >= ymd('2019-07-19'), date <= ymd('2019-08-20'))
# FROM
t <- table(d$hour,d$from)
hour <- attr(t,'dimnames')[[1]]
from <- attr(t,'dimnames')[[2]]
dfrom <- lapply(from, function(x) tibble(
from = rep(x,length(hour)),
hour = hour)) %>%
bind_rows()
t <- as.numeric(t) %>% tibble()
colnames(t) <- 'from_count'
dfrom <- bind_cols(dfrom, t)
rm(hour,from,t)
x <- dfrom %>% group_by(hour) %>% summarise(tot = sum(from_count))
dfrom <- inner_join(dfrom, x, by = 'hour') %>%
mutate(from_freq_rel = from_count / tot)
rm(x)
avg_dist <- tapply(d$distance, list(d$hour,d$from), mean) %>%
as.data.frame() %>%
rownames_to_column('hour') %>%
gather(-matches('hour'), key = 'from', value = 'from_avg_dist')
dfrom <- inner_join(dfrom, avg_dist, by = c('hour','from')) %>%
select(-'tot')
# TO
t <- table(d$hour,d$to)
hour <- attr(t,'dimnames')[[1]]
to <- attr(t,'dimnames')[[2]]
dto <- lapply(to, function(x) tibble(
to = rep(x,length(hour)),
hour = hour)) %>%
bind_rows()
t <- as.numeric(t) %>% tibble()
colnames(t) <- 'to_count'
dto <- bind_cols(dto, t)
rm(hour,to,t)
x <- dto %>% group_by(hour) %>% summarise(tot = sum(to_count))
dto <- inner_join(dto, x, by = 'hour') %>%
mutate(to_freq_rel = to_count / tot)
rm(x)
avg_dist <- tapply(d$distance, list(d$hour,d$to), mean) %>%
as.data.frame() %>%
rownames_to_column('hour') %>%
gather(-matches('hour'), key = 'to', value = 'to_avg_dist')
dto <- inner_join(dto, avg_dist, by = c('hour','to')) %>%
select(-'tot')
out <- inner_join(dfrom,dto, by = c('from' = 'to', 'hour')) %>%
left_join(stations, by = c('from' = 'name'))
View(out)
source('~/Downloads/usi-hackathon-19/src/r/spread_bikes.R')
View(out)
write_csv(
gather_bike(d,'2019-07-20','2019-08-19'),
path = 'gather_bike_summer.csv'
)
gather_bike <- function(d, start, end){
d <- d %>%
filter(date >= ymd(start), date <= ymd(end))
stations <- read_csv('datasets/publibike/stations.csv') %>%
select('name', 'longitude', 'latitude')
# FROM
t <- table(d$hour,d$from)
hour <- attr(t,'dimnames')[[1]]
from <- attr(t,'dimnames')[[2]]
dfrom <- lapply(from, function(x) tibble(
from = rep(x,length(hour)),
hour = hour)) %>%
bind_rows()
t <- as.numeric(t) %>% tibble()
colnames(t) <- 'from_count'
dfrom <- bind_cols(dfrom, t)
rm(hour,from,t)
x <- dfrom %>% group_by(hour) %>% summarise(tot = sum(from_count))
dfrom <- inner_join(dfrom, x, by = 'hour') %>%
mutate(from_freq_rel = from_count / tot)
rm(x)
avg_dist <- tapply(d$distance, list(d$hour,d$from), mean) %>%
as.data.frame() %>%
rownames_to_column('hour') %>%
gather(-matches('hour'), key = 'from', value = 'from_avg_dist')
dfrom <- inner_join(dfrom, avg_dist, by = c('hour','from')) %>%
select(-'tot')
# TO
t <- table(d$hour,d$to)
hour <- attr(t,'dimnames')[[1]]
to <- attr(t,'dimnames')[[2]]
dto <- lapply(to, function(x) tibble(
to = rep(x,length(hour)),
hour = hour)) %>%
bind_rows()
t <- as.numeric(t) %>% tibble()
colnames(t) <- 'to_count'
dto <- bind_cols(dto, t)
rm(hour,to,t)
x <- dto %>% group_by(hour) %>% summarise(tot = sum(to_count))
dto <- inner_join(dto, x, by = 'hour') %>%
mutate(to_freq_rel = to_count / tot)
rm(x)
avg_dist <- tapply(d$distance, list(d$hour,d$to), mean) %>%
as.data.frame() %>%
rownames_to_column('hour') %>%
gather(-matches('hour'), key = 'to', value = 'to_avg_dist')
dto <- inner_join(dto, avg_dist, by = c('hour','to')) %>%
select(-'tot')
out <- inner_join(dfrom,dto, by = c('from' = 'to', 'hour')) %>%
left_join(stations, by = c('from' = 'name')) %>%
rename(station = from)
retrun(out)
}
write_csv(
gather_bike(d,'2019-07-20','2019-08-19'),
path = 'gather_bike_summer.csv'
)
d <- read.csv('datasets/bikes.csv') %>%
drop_na(to) %>%
mutate(from = as.factor(to), to = as.factor(to), hour = as.factor(hour)) %>%
mutate(date = ymd(date))
gather_bike <- function(d, start, end){
d <- d %>%
filter(date >= ymd(start), date <= ymd(end))
stations <- read_csv('datasets/publibike/stations.csv') %>%
select('name', 'longitude', 'latitude')
# FROM
t <- table(d$hour,d$from)
hour <- attr(t,'dimnames')[[1]]
from <- attr(t,'dimnames')[[2]]
dfrom <- lapply(from, function(x) tibble(
from = rep(x,length(hour)),
hour = hour)) %>%
bind_rows()
t <- as.numeric(t) %>% tibble()
colnames(t) <- 'from_count'
dfrom <- bind_cols(dfrom, t)
rm(hour,from,t)
x <- dfrom %>% group_by(hour) %>% summarise(tot = sum(from_count))
dfrom <- inner_join(dfrom, x, by = 'hour') %>%
mutate(from_freq_rel = from_count / tot)
rm(x)
avg_dist <- tapply(d$distance, list(d$hour,d$from), mean) %>%
as.data.frame() %>%
rownames_to_column('hour') %>%
gather(-matches('hour'), key = 'from', value = 'from_avg_dist')
dfrom <- inner_join(dfrom, avg_dist, by = c('hour','from')) %>%
select(-'tot')
# TO
t <- table(d$hour,d$to)
hour <- attr(t,'dimnames')[[1]]
to <- attr(t,'dimnames')[[2]]
dto <- lapply(to, function(x) tibble(
to = rep(x,length(hour)),
hour = hour)) %>%
bind_rows()
t <- as.numeric(t) %>% tibble()
colnames(t) <- 'to_count'
dto <- bind_cols(dto, t)
rm(hour,to,t)
x <- dto %>% group_by(hour) %>% summarise(tot = sum(to_count))
dto <- inner_join(dto, x, by = 'hour') %>%
mutate(to_freq_rel = to_count / tot)
rm(x)
avg_dist <- tapply(d$distance, list(d$hour,d$to), mean) %>%
as.data.frame() %>%
rownames_to_column('hour') %>%
gather(-matches('hour'), key = 'to', value = 'to_avg_dist')
dto <- inner_join(dto, avg_dist, by = c('hour','to')) %>%
select(-'tot')
out <- inner_join(dfrom,dto, by = c('from' = 'to', 'hour')) %>%
left_join(stations, by = c('from' = 'name')) %>%
rename(station = from)
retrun(out)
}
write_csv(
gather_bike(d,'2019-07-20','2019-08-19'),
path = 'gather_bike_summer.csv'
)
gather_bike <- function(d, start, end){
d <- d %>%
filter(date >= ymd(start), date <= ymd(end))
stations <- read_csv('datasets/publibike/stations.csv') %>%
select('name', 'longitude', 'latitude')
# FROM
t <- table(d$hour,d$from)
hour <- attr(t,'dimnames')[[1]]
from <- attr(t,'dimnames')[[2]]
dfrom <- lapply(from, function(x) tibble(
from = rep(x,length(hour)),
hour = hour)) %>%
bind_rows()
t <- as.numeric(t) %>% tibble()
colnames(t) <- 'from_count'
dfrom <- bind_cols(dfrom, t)
rm(hour,from,t)
x <- dfrom %>% group_by(hour) %>% summarise(tot = sum(from_count))
dfrom <- inner_join(dfrom, x, by = 'hour') %>%
mutate(from_freq_rel = from_count / tot)
rm(x)
avg_dist <- tapply(d$distance, list(d$hour,d$from), mean) %>%
as.data.frame() %>%
rownames_to_column('hour') %>%
gather(-matches('hour'), key = 'from', value = 'from_avg_dist')
dfrom <- inner_join(dfrom, avg_dist, by = c('hour','from')) %>%
select(-'tot')
# TO
t <- table(d$hour,d$to)
hour <- attr(t,'dimnames')[[1]]
to <- attr(t,'dimnames')[[2]]
dto <- lapply(to, function(x) tibble(
to = rep(x,length(hour)),
hour = hour)) %>%
bind_rows()
t <- as.numeric(t) %>% tibble()
colnames(t) <- 'to_count'
dto <- bind_cols(dto, t)
rm(hour,to,t)
x <- dto %>% group_by(hour) %>% summarise(tot = sum(to_count))
dto <- inner_join(dto, x, by = 'hour') %>%
mutate(to_freq_rel = to_count / tot)
rm(x)
avg_dist <- tapply(d$distance, list(d$hour,d$to), mean) %>%
as.data.frame() %>%
rownames_to_column('hour') %>%
gather(-matches('hour'), key = 'to', value = 'to_avg_dist')
dto <- inner_join(dto, avg_dist, by = c('hour','to')) %>%
select(-'tot')
out <- inner_join(dfrom,dto, by = c('from' = 'to', 'hour')) %>%
left_join(stations, by = c('from' = 'name')) %>%
rename(station = from)
return(out)
}
write_csv(
gather_bike(d,'2019-07-20','2019-08-19'),
path = 'gather_bike_summer.csv'
)
write_csv(
gather_bike(d,'2019-09-16','2019-10-15'),
path = 'gather_bike_autumn.csv'
)
